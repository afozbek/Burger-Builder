{"version":3,"sources":["components/UI/Input/Input.js","components/UI/Input/Input.css","containers/Auth/Auth.css","containers/Auth/Auth.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_css__WEBPACK_IMPORTED_MODULE_1__","_Input_css__WEBPACK_IMPORTED_MODULE_1___default","input","props","inputElement","inputClasses","classes","InputElement","invalid","shouldValidate","touched","push","Invalid","elementType","a","createElement","Object","assign","className","join","elementConfig","value","onChange","changed","options","map","option","key","displayValue","Label","name","module","exports","Input","Auth","auth","_useState","useState","email","type","placeholder","validation","required","isEmail","minLength","valid","password","_useState2","C_Users_furka_Desktop_Projects_React_burger_hunger_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","controls","setControls","_useState3","_useState4","isSignup","setIsSignup","useEffect","buildingBurger","authRedirectPath","onSetAuthRedirectPath","formElementsArray","id","config","form","formElement","react__WEBPACK_IMPORTED_MODULE_2___default","_components_UI_Input_Input__WEBPACK_IMPORTED_MODULE_5__","event","controlName","updatedControls","updateObject","C_Users_furka_Desktop_Projects_React_burger_hunger_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","checkValidity","inputChangedHandler","loading","_components_UI_Spinner_Spinner__WEBPACK_IMPORTED_MODULE_9__","errorMessage","error","message","authRedirect","isAuthenticated","path","react_router_dom__WEBPACK_IMPORTED_MODULE_4__","to","onSubmit","preventDefault","isSignup_","onAuth","_components_UI_Button_Button__WEBPACK_IMPORTED_MODULE_6__","btnType","clicked","connect","state","token","burgerBuilder","building","dispatch","actions"],"mappings":"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","file":"static/js/4.9728d91f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport classes from \"./Input.css\";\r\n\r\nconst input = props => {\r\n  let inputElement = null;\r\n  const inputClasses = [classes.InputElement];\r\n\r\n  if (props.invalid && props.shouldValidate && props.touched) {\r\n    inputClasses.push(classes.Invalid);\r\n  }\r\n\r\n  switch (props.elementType) {\r\n    case \"input\":\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case \"textarea\":\r\n      inputElement = (\r\n        <textarea\r\n          className={inputClasses.join(\" \")}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case \"select\":\r\n      inputElement = (\r\n        <select\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        >\r\n          {props.elementConfig.options.map(option => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.displayValue}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      );\r\n      break;\r\n    default:\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n  }\r\n  return (\r\n    <div>\r\n      <label className={classes.Label}>{props.name}</label>\r\n      {inputElement}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default input;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__1VROp\",\"Label\":\"Input__Label__1tOSX\",\"InputElement\":\"Input__InputElement__3TB0k\",\"Invalid\":\"Input__Invalid__38X2d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth__Auth__1TInt\"};","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport classes from \"./Auth.css\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport { updateObject, checkValidity } from \"../../shared/utility\";\r\n\r\nconst auth = props => {\r\n  const [controls, setControls] = useState({\r\n    email: {\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        type: \"email\",\r\n        placeholder: \"Please Enter Your Email\"\r\n      },\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        isEmail: true,\r\n        minLength: 8\r\n      },\r\n      valid: false,\r\n      touched: false\r\n    },\r\n    password: {\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        type: \"password\",\r\n        placeholder: \"Password\"\r\n      },\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 8\r\n      },\r\n      valid: false,\r\n      touched: false\r\n    }\r\n  });\r\n  const [isSignup, setIsSignup] = useState(false);\r\n\r\n  const inputChangedHandler = (event, controlName) => {\r\n    const updatedControls = updateObject(controls, {\r\n      [controlName]: updateObject(controls[controlName], {\r\n        value: event.target.value,\r\n        valid: checkValidity(\r\n          event.target.value,\r\n          controls[controlName].validation\r\n        ),\r\n        touched: true\r\n      })\r\n    });\r\n    setControls(updatedControls);\r\n  };\r\n\r\n  const switchAuthModeHandler = () => {\r\n    setIsSignup(!isSignup);\r\n  };\r\n\r\n  const submitHandler = event => {\r\n    event.preventDefault();\r\n    const email = controls.email.value;\r\n    const password = controls.password.value;\r\n    const isSignup_ = isSignup;\r\n\r\n    props.onAuth(email, password, isSignup_);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!props.buildingBurger && props.authRedirectPath !== \"/\") {\r\n      props.onSetAuthRedirectPath();\r\n    }\r\n  }, []);\r\n\r\n  const formElementsArray = [];\r\n  for (let key in controls) {\r\n    formElementsArray.push({\r\n      id: key,\r\n      config: controls[key]\r\n    });\r\n  }\r\n  let form = formElementsArray.map(formElement => (\r\n    <Input\r\n      key={formElement.id}\r\n      elementType={formElement.config.elementType}\r\n      elementConfig={formElement.config.elementConfig}\r\n      value={formElement.config.value}\r\n      changed={event => inputChangedHandler(event, formElement.id)}\r\n      invalid={!formElement.config.valid}\r\n      touched={formElement.config.touched}\r\n      shouldValidate={formElement.config.validation}\r\n    />\r\n  ));\r\n\r\n  if (props.loading) form = <Spinner />;\r\n\r\n  let errorMessage = null;\r\n\r\n  const error = props.error;\r\n\r\n  if (error) {\r\n    errorMessage = <h1>{error.message}</h1>;\r\n  }\r\n\r\n  let authRedirect = null;\r\n\r\n  if (props.isAuthenticated) {\r\n    let path = props.authRedirectPath;\r\n\r\n    authRedirect = <Redirect to={path} />;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Auth}>\r\n      {authRedirect}\r\n      {errorMessage}\r\n      <form onSubmit={submitHandler}>\r\n        {form}\r\n        <Button btnType=\"Success\">SUBMIT</Button>\r\n      </form>\r\n      <Button btnType=\"Danger\" clicked={switchAuthModeHandler}>\r\n        SWITCH TO {isSignup ? \"LOGIN\" : \"SIGNUP\"}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.auth.loading,\r\n    error: state.auth.error,\r\n    isAuthenticated: state.auth.token !== null,\r\n    buildingBurger: state.burgerBuilder.building,\r\n    authRedirectPath: auth.authRedirectPath\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAuth: (email, password, isSignup) =>\r\n      dispatch(actions.auth(email, password, isSignup)),\r\n    onSetAuthRedirectPath: path => dispatch(actions.setAuthRedirect(\"/\"))\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(auth);\r\n"],"sourceRoot":""}