{"version":3,"sources":["components/UI/Input/Input.js","components/UI/Input/Input.css","components/Order/CheckoutSummary/CheckoutSummary.css","containers/Checkout/ContactData/ContactData.css","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_css__WEBPACK_IMPORTED_MODULE_1__","_Input_css__WEBPACK_IMPORTED_MODULE_1___default","input","props","inputElement","inputClasses","classes","InputElement","invalid","shouldValidate","touched","push","Invalid","elementType","a","createElement","Object","assign","className","join","elementConfig","value","onChange","changed","options","map","option","key","displayValue","Label","name","module","exports","Input","CheckoutSummary","ContactData","checkoutSummary","react_default","style","width","margin","Burger","ingredients","Button","btnType","clicked","checkoutCancelled","checkoutContinued","connect","state","burgerBuilder","totalPrice","loading","order","token","auth","userId","dispatch","onOrderBurger","orderData","burgerActions","withErrorHandler","_useState","useState","type","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","_useState2","slicedToArray","orderForm","setOrderForm","_useState3","_useState4","isFormValid","setIsFormValid","formElementsArray","id","config","form","action","onSubmit","e","preventDefault","formData","formElementID","price","formElement","event","inputIdentifier","updatedFormElement","updateObject","target","checkValidity","updatedOrderForm","defineProperty","inputID","inputChangedHandler","disabled","Spinner","axios","purchased","summary","react_router","to","purchasedRedirect","CheckoutSummary_CheckoutSummary","history","goBack","replace","path","match","component"],"mappings":"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","file":"static/js/3.ddb42587.chunk.js","sourcesContent":["import React from \"react\";\r\nimport classes from \"./Input.css\";\r\n\r\nconst input = props => {\r\n  let inputElement = null;\r\n  const inputClasses = [classes.InputElement];\r\n\r\n  if (props.invalid && props.shouldValidate && props.touched) {\r\n    inputClasses.push(classes.Invalid);\r\n  }\r\n\r\n  switch (props.elementType) {\r\n    case \"input\":\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case \"textarea\":\r\n      inputElement = (\r\n        <textarea\r\n          className={inputClasses.join(\" \")}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n    case \"select\":\r\n      inputElement = (\r\n        <select\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        >\r\n          {props.elementConfig.options.map(option => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.displayValue}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      );\r\n      break;\r\n    default:\r\n      inputElement = (\r\n        <input\r\n          className={inputClasses.join(\" \")}\r\n          {...props.elementConfig}\r\n          value={props.value}\r\n          onChange={props.changed}\r\n        />\r\n      );\r\n      break;\r\n  }\r\n  return (\r\n    <div>\r\n      <label className={classes.Label}>{props.name}</label>\r\n      {inputElement}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default input;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__1VROp\",\"Label\":\"Input__Label__1tOSX\",\"InputElement\":\"Input__InputElement__3TB0k\",\"Invalid\":\"Input__Invalid__38X2d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary__CheckoutSummary__-avOx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData__ContactData__1whvJ\"};","import React from \"react\";\r\n\r\nimport Burger from \"../../Burger/Burger\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport classes from \"./CheckoutSummary.css\";\r\n\r\nconst checkoutSummary = props => {\r\n  return (\r\n    <div className={classes.CheckoutSummary}>\r\n      <h1>We hope it tastes well</h1>\r\n      <div style={{ width: \"100%\", margin: \"auto\" }}>\r\n        <Burger ingredients={props.ingredients} />\r\n      </div>\r\n      <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>\r\n        CANCEL\r\n      </Button>\r\n      <Button btnType=\"Success\" clicked={props.checkoutContinued}>\r\n        CONTINUE\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default checkoutSummary;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport classes from \"./ContactData.css\";\r\nimport Button from \"../../../components/UI/Button/Button\";\r\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\r\nimport axios from \"../../../axios-orders\";\r\nimport Input from \"../../../components/UI/Input/Input\";\r\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\";\r\nimport * as burgerActions from \"../../../store/actions/index\";\r\nimport { updateObject, checkValidity } from \"../../../shared/utility\";\r\n\r\nconst contactData = props => {\r\n  const [orderForm, setOrderForm] = useState({\r\n    name: {\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        type: \"text\",\r\n        placeholder: \"Your Name\"\r\n      },\r\n      value: \"\",\r\n      validation: {\r\n        required: true\r\n      },\r\n      valid: false,\r\n      touched: false\r\n    },\r\n    street: {\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        type: \"text\",\r\n        placeholder: \"Street\"\r\n      },\r\n      value: \"\",\r\n      validation: {\r\n        required: true\r\n      },\r\n      valid: false,\r\n      touched: false\r\n    },\r\n    zipCode: {\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        type: \"text\",\r\n        placeholder: \"ZIP CODE\"\r\n      },\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 5,\r\n        maxLength: 5\r\n      },\r\n      valid: false,\r\n      touched: false\r\n    },\r\n    country: {\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        type: \"text\",\r\n        placeholder: \"Country\"\r\n      },\r\n      value: \"\",\r\n      validation: {\r\n        required: true\r\n      },\r\n      valid: false,\r\n      touched: false\r\n    },\r\n    email: {\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        type: \"email\",\r\n        placeholder: \"Your Email\"\r\n      },\r\n      value: \"\",\r\n      validation: {\r\n        required: true\r\n      },\r\n      valid: false,\r\n      touched: false\r\n    },\r\n    deliveryMethod: {\r\n      elementType: \"select\",\r\n      elementConfig: {\r\n        options: [\r\n          { value: \"fastest\", displayValue: \"Fastest\" },\r\n          { value: \"cheapest\", displayValue: \"Cheapest\" }\r\n        ]\r\n      },\r\n      validation: {},\r\n      value: \"fastest\",\r\n      valid: true\r\n    }\r\n  });\r\n  const [isFormValid, setIsFormValid] = useState(false);\r\n\r\n  const orderHandler = e => {\r\n    e.preventDefault();\r\n\r\n    const formData = {};\r\n    for (let formElementID in orderForm) {\r\n      formData[formElementID] = orderForm[formElementID].value;\r\n    }\r\n\r\n    const order = {\r\n      ingredients: props.ingredients,\r\n      price: props.totalPrice,\r\n      orderData: formData,\r\n      userId: props.userId\r\n    };\r\n    props.onOrderBurger(order, props.token);\r\n  };\r\n\r\n  const inputChangedHandler = (event, inputIdentifier) => {\r\n    const updatedFormElement = updateObject(orderForm[inputIdentifier], {\r\n      value: event.target.value,\r\n      valid: checkValidity(\r\n        event.target.value,\r\n        orderForm[inputIdentifier].validation\r\n      ),\r\n      touched: true\r\n    });\r\n\r\n    const updatedOrderForm = updateObject(orderForm, {\r\n      [inputIdentifier]: updatedFormElement\r\n    });\r\n\r\n    let isFormValid = true;\r\n\r\n    for (let inputID in updatedOrderForm) {\r\n      isFormValid = updatedOrderForm[inputID].valid && isFormValid;\r\n    }\r\n\r\n    setOrderForm(updatedOrderForm);\r\n    setIsFormValid(isFormValid);\r\n  };\r\n\r\n  const formElementsArray = [];\r\n  for (let key in orderForm) {\r\n    formElementsArray.push({\r\n      id: key,\r\n      config: orderForm[key]\r\n    });\r\n  }\r\n\r\n  let form = (\r\n    <form action=\"#\" onSubmit={orderHandler}>\r\n      {formElementsArray.map(formElement => (\r\n        <Input\r\n          key={formElement.id}\r\n          elementType={formElement.config.elementType}\r\n          elementConfig={formElement.config.elementConfig}\r\n          value={formElement.config.value}\r\n          changed={event => inputChangedHandler(event, formElement.id)}\r\n          invalid={!formElement.config.valid}\r\n          touched={formElement.config.touched}\r\n          shouldValidate={formElement.config.validation}\r\n        />\r\n      ))}\r\n      <Button btnType=\"Success\" disabled={!isFormValid}>\r\n        ORDER\r\n      </Button>\r\n    </form>\r\n  );\r\n\r\n  if (props.loading) {\r\n    form = <Spinner />;\r\n  }\r\n  return (\r\n    <div className={classes.ContactData}>\r\n      <h4>Enter your Contact Data</h4>\r\n      {form}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ingredients: state.burgerBuilder.ingredients,\r\n    totalPrice: state.burgerBuilder.totalPrice,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onOrderBurger: (orderData, token) =>\r\n      dispatch(burgerActions.purchaseBurger(orderData, token))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(contactData, axios));\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary/CheckoutSummary\";\r\nimport ContactData from \"./ContactData/ContactData\";\r\n\r\nconst checkout = props => {\r\n  const checkoutCancelledHandler = () => {\r\n    props.history.goBack();\r\n  };\r\n  const onCheckoutContinuedHandler = () => {\r\n    props.history.replace(\"/checkout/contact-data\");\r\n  };\r\n\r\n  let summary = <Redirect to=\"/\" />;\r\n  if (props.ingredients) {\r\n    const purchasedRedirect = props.purchased ? <Redirect to=\"/\" /> : null;\r\n    summary = (\r\n      <div>\r\n        {purchasedRedirect}\r\n        <CheckoutSummary\r\n          ingredients={props.ingredients}\r\n          checkoutCancelled={checkoutCancelledHandler}\r\n          checkoutContinued={onCheckoutContinuedHandler}\r\n        />\r\n        <Route\r\n          path={props.match.path + \"/contact-data\"}\r\n          component={ContactData}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  return summary;\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ingredients: state.burgerBuilder.ingredients,\r\n    purchased: state.order.purchased\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(checkout);\r\n"],"sourceRoot":""}